python                                          js

a = 5                                       let a = 5       variable
b = 7                                       const b = 7     constant variable     

def solve(a, b):                            function solve(a, b) {
    return a + b                                return a + b;
                                            }
print(solve(5, 5))                          console.log(solve(5,5))

print(f"This is {a}")                       console.log(`This is ${a}`) <- the `` are special! (top left)

pi = 3.1415926                              const pi = 3.1415926
print(round(pi, 2))                         console.log(pi.toFixed(2))

prinf(f"{a:.2f}")                           console.log(a.toFixed(2))

escaping special characters -- same '\'

person = {'name': 'George', 'age': 5}       let person = {name: 'George', age: 5}
print(person['name'])                       console.log(person['name']) OR console.log(person.name)

is_bool = True                              let isBool = true

6 == 6   True                               6 == 6 true
6 == '6' False                              6 == '6' true    equality operator
                                            6 === 6 true
                                            6 === '6' false  identity operator (or strict equality)

3 != 3 False                                3 != 3 false
3 != '3' True                               3 != '3' false 
                                            3 !== 3 false
                                            3 !== '3' true
                                        
not True                                    !true

                                            if-else expression (or teranry operator) -> can be placed in console.log
                                            (5 > 7) ? 4 : 10
                                            if true - > first value, else -> second value 

if a == b:                                  if (a == b) {
    print(a)                                   console.log(a)
else:                                       } else {
    print(b)                                    console.log(b)
                                            }

                                            switch statements - similar to if-elif-else
                                            switch(value)
                                                case 'Ivan':
                                                    console.log('Hello Ivan');
                                                    break;
                                                case 'Dragan':
                                                    console.log('Zdrasti Drgao');
                                                    break;
                                                default:
                                                    console.log('Ne znam koi si');
                                                    break;
                                            
                                            if no BREAK -> the code will continue to execute
                                            cannot be used with bool expressions

                                            !  NOT
                                            && AND
                                            || OR

type(value)                                 typeof value



difference when checking [], {} 

array = []      

def check_if_true(value):                   function logTruthiness(value) {
    if array:                                   if (value) {
        print(True)                               console.log(true) 
    else:                                       } else {
        print(False)                               console.log(flase) 
check_if_true(array) -> False                   }
                                            }

                                            logTruthiness(array) -> true

loops

for i in range(10):                         for (let i = 0; i < 10; i++) {
    print(i)                                    console.log(i);     
                                            }

i = 0                                       let i = 0;
while i < 10:                               while (i < 0) {
    print(i)                                    console.log(i);
    i += 1                                      i++;
                                            }